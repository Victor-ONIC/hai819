#version 460

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(std430, binding = 0) buffer BlockData {
    uint data[]; // Le tableau de donn√©es
};

uniform int map_width;
uniform int map_height;
uniform int map_depth;

// Fonction pour convertir (x, y, z) en un index 1D
uint index3DTo1D(uint x, uint y, uint z, uint width, uint height) {
    return x + y * width + z * (width * height);
}

vec3 normalize_id(ivec3 id, uint width, uint height, uint depth){
    return vec3(float(id.x) / float(width), float(id.y) / float(height), float(id.z) / float(depth));
}

void main()
{
    ivec3 id = ivec3(gl_GlobalInvocationID.xyz);
    uint id1D = index3DTo1D(id.x, id.y, id.z, map_width, map_height);
    vec3 ind3D = normalize_id(id, map_width, map_height, map_depth);

    if(data[id1D] == 0 && ind3D.y < 0.15) data[id1D] = 2;
}
